print(excess_or_lack)
evil_soldiers <- c(29.8, 123.9, 18.5)
just_soldiers <- c(30.7, 60.3, 9.1)
excess_or_lack <- just_soldiers - evil_soldiers
print(excess_or_lack)
evil_soldiers <- c(23.8, 123.9, 17.5)
just_soldiers <- c(30.7, 60.3, 9.1)
excess_or_lack <- just_soldiers - evil_soldiers
print(excess_or_lack)
evil_soldiers <- c(25.8, 123.9, 17.5)
just_soldiers <- c(30.7, 60.3, 9.1)
excess_or_lack <- just_soldiers - evil_soldiers
print(excess_or_lack)
army_types <- c("Navy", "Land", "Air")
names(excess_or_lack) <- army_types
print(excess_or_lack)
total_just_soldiers <- sum(just_soldiers)
total_evil_soldiers <- sum(evil_soldiers)
total_evil_soldiers > total_just_soldiers
names(evil_soldiers) <- army_types
names(just_soldiers) <- army_types
just_navy <- just_soldiers["Navy"]
evil_navy <- evil_soldiers[c(1)]
evil_navy > just_navy
selection_army <- excess_or_lack[c(1:3)] > 0
print(selection_army)
selection_army <- excess_or_lack[c(1:3)] > 0
print(selection_army)
winning_army <- excess_or_lack[selection_army]
print(winning_army)
knitr::opts_chunk$set(echo = TRUE)
1 + 1
install.packages("twitteR", "ROAuth")
install.packages("twitteR", "RCurl", "RJSONIO", "stringr")
download.file(url="http://curl.haxx.se/ca/caert.pem",destfile = "cacert.pem")
download.file(url="http://curl.haxx.se/ca/cacert.pem",destfile = "cacert.pem")
library(twitteR)
library(ROAuth)
install.packages("ROAuth")
library(ROAuth)
cred <- OAuthFactory$new(consumerKey= 'JsRcDjPiArq9OzDcJwgX6mcae',
consumerSecret = 'TAwovz3ek8pkxY8ZU1bsMH77GjpXHtxhTjvKIkGDdZ2A5lZtJu',
requestURL = 'https://api.twitter.com/oauth/request_token',
accessURL = 'https://api.twitter.com/oauth/access_token'
authURL = 'https://api.twitter.com/oauth/authorize')
cred <- OAuthFactory$new(consumerKey= 'JsRcDjPiArq9OzDcJwgX6mcae',
consumerSecret = 'TAwovz3ek8pkxY8ZU1bsMH77GjpXHtxhTjvKIkGDdZ2A5lZtJu',
requestURL = 'https://api.twitter.com/oauth/request_token',
accessURL = 'https://api.twitter.com/oauth/access_token',
authURL = 'https://api.twitter.com/oauth/authorize')
cred$handshake(cainfo = "cacert.pem")
save(cred, file = "twitter authetication.Rdata")
load("twitter authentication.Rdata")
registerTwitterOAuth(cred)
?setup_twitter_oauth
setup_twitter_oauth("JsRcDjPiArq9OzDcJwgX6mcae", "TAwovz3ek8pkxY8ZU1bsMH77GjpXHtxhTjvKIkGDdZ2A5lZtJu")
setup_twitter_oauth("JsRcDjPiArq9OzDcJwgX6mcae",
"TAwovz3ek8pkxY8ZU1bsMH77GjpXHtxhTjvKIkGDdZ2A5lZtJu",
"1017636712934039552-8qfYxxyBKDOHHZANmtkpmiIFTMASka",
"6rx586u4wwh0EcSAzQfhRT4JXn3XCYachsJfRjDSgSDM3")
tweets <- searchTwitter(searchString = "realDonaldTrump", n = 100)
View(tweets)
View(tweets)
tweets.df <- twListToDF(tweets)
View(tweets.df)
View(tweets.df)
View(tweets.df)
View(tweets.df)
tweets.v <- as.vector(DJT.tweets$text)
tweets.v <- as.vector(tweets$text)
tweets.v
View(tweets.df)
View(tweets.df)
tweets.v <- as.vector(tweets[,1])
tweets.v <- as.vector(tweets[1,])
tweets.v <- tweets.df[,"text"]
tweets.v
tweets.v <- tweets.df[,"text"] %>%
c(,)
library(magrittr)
tweets.v <- tweets.df[,"text"] %>%
c(,)
tweets.v <- tweets.df[,"text"] %>%
c(.)
tweets.v
tweets.df <- twListToDF(tweets)
tweets.v <- tweets.df[,"text"] %>%
paste0(., collapse = NULL)
tweets.v
tweets.v <- tweets.df[,"text"] %>%
paste0(tweets.v, collapse = NULL)
tweets.v <- tweets.df[,"text"] %>%
twit <- paste0(tweets.v, collapse = NULL)
twit <- paste0(tweets.v, collapse = NULL)
remove(twit)
tweets.merged <- paste(tweets.v, sep = " ")
tweets.merged
tweets.merged <- paste(c(tweets.v), sep = " ")
tweets.merged <- unlist(tweets.v)
tweets.merged
tweets.merged <- list(tweets.v)
tweets.merged
View(tweets.merged)
View(tweets.merged)
tweets.merged[[1]]
twit <- paste(tweets.merged, sep = "")
twit
twit2 <- paste(tweets.v, sep = "")
remove(twit2)
gsub('[[:punct:]]+','', twit)
library(twitteR)
library(ROAuth)
library(magrittr)
setup_twitter_oauth("JsRcDjPiArq9OzDcJwgX6mcae",
"TAwovz3ek8pkxY8ZU1bsMH77GjpXHtxhTjvKIkGDdZ2A5lZtJu",
"1017636712934039552-8qfYxxyBKDOHHZANmtkpmiIFTMASka",
"6rx586u4wwh0EcSAzQfhRT4JXn3XCYachsJfRjDSgSDM3")
tweets <- searchTwitter(searchString = "realDonaldTrump", n = 100)
tweets.df <- twListToDF(tweets)
tweets.v <- tweets.df[,"text"]
twit <- paste(tweets.merged, sep = "")
gsub('[[:punct:]]+','', " ", twit)
twit
gsub('[[:punct:]]+',' ', twit)
tweet.split<- strsplit(twit, " ")
tweet.split
djt.df <- as.data.frame(table(tweet.split))
djt.df
adj.djt.df <- sapply(djt.df, order, decreasing  = TRUE)
adj.djt.df
View(adj.djt.df)
remove(adj.djt.df)
View(djt.df)
order(djt.df, decreasing = TRUE)
djt.dude <- order(djt.df, decreasing = TRUE)
djt.dude <- djt.df[order(djt.df$Freq, decreasing = TRUE),]
View(djt.dude)
wordcloud2(djt.dude., size = 1.5, color = "random-light", backgroundColor = "grey")
library(wordcloud2)
wordcloud2(djt.dude., size = 1.5, color = "random-light", backgroundColor = "grey")
wordcloud2(djt.dude, size = 1.5, color = "random-light", backgroundColor = "grey")
rm(list = ls())
wordcloud2(djt.dude, size = 1.5, color = "random-light", backgroundColor = "grey")
source('~/.active-rstudio-document', echo=TRUE)
tweets.df <- twListToDF(tweets)
tweets.v <- tweets.df[,"text"] %>%
list(.) %>%
paste(., sep = "")
tweets.v
tweets.char <- tweets.df[,"text"] %>%
list(.) %>%
paste(., sep = "") %>%
gsub('[[:punct:]]+',' ',.)
remove(tweets.v)
tweets.char <- tweets.df[,"text"] %>%
list(.) %>%
paste(., sep = "") %>%
gsub('[[:punct:]]+',' ',.) %>%
strsplit(., " ")
djt.df <- as.data.frame(table(tweets.char))
djt.dude <- djt.df[order(djt.df$Freq, decreasing = TRUE),]
View(djt.dude)
View(djt.dude)
wordcloud2(djt.dude, size = 1.5, color = "random-light", backgroundColor = "grey")
wordcloud2(djt.dude, size = 3, color = "random-light", backgroundColor = "grey")
wordcloud2(djt.dude, size = 10, color = "random-light", backgroundColor = "grey")
djt.dude$tweets.char[trashwords]
trashwords <- c('https', 'RT', 't', 'and' , 'co', 'is','what', 'on',
'you', 'not', 'has', 'Dear', 'do', 'It', 'about', 'The'
'have', 'an')
trashwords <- c('https', 'RT', 't', 'and' , 'co', 'is','what', 'on',
'you', 'not', 'has', 'Dear', 'do', 'It', 'about', 'The',
'have', 'an')
djt.dude$tweets.char[trashwords]
remove(djt.dude$tweets.char[trashwords])
subset(djt.dude, tweets.char!=trashwords)
djt.dude <- subset(djt.dude, tweets.char!=trashwords)
djt.final <- subset(djt.dude, tweets.char!=trashwords)
remove(djt.final)
djt.dude[djt.dude$tweets.char != trashwords]
djt.dude[djt.dude$tweets.char == trashwords]
library(dplyr)
trashwords.pattern <- apply(djt.dude, 1, function(x) !any(x %in% trashwords))
djt.final <- subset(djt.dude, trashwords.pattern)
View(djt.final)
View(djt.final)
trashwords <- c('https', 'RT', 't', 'and' , 'co', 'is','what', 'on',
'you', 'not', 'has', 'Dear', 'do', 'It', 'about', 'The',
'have', 'an', " ")
trashwords.pattern <- apply(djt.dude, 1, function(x) !any(x %in% trashwords))
djt.final <- subset(djt.dude, trashwords.pattern)
View(djt.final)
View(djt.final)
wordcloud2(djt.dude, size = 10, color = "random-light", backgroundColor = "grey")
wordcloud2(djt.final, size = 10, color = "random-light", backgroundColor = "grey")
trashwords <- c('https', 'RT', 't', 'and' , 'co', 'is','what', 'on',
'you', 'not', 'has', 'Dear', 'do', 'It', 'about', 'The',
'have', 'an', 'U', 'to', 'the', ' of', 'n', 's', 'I',
'our', 'for', 'are', 'He', 'he')
trashwords.pattern <- apply(djt.dude, 1, function(x) !any(x %in% trashwords))
djt.final <- subset(djt.dude, trashwords.pattern)
wordcloud2(djt.final, size = 10, color = "random-light", backgroundColor = "grey")
trashwords <- c('https', 'RT', 't', 'and' , 'co', 'is','what', 'on',
'you', 'not', 'has', 'Dear', 'do', 'It', 'about', 'The',
'have', 'an', 'U', 'to', 'the', ' of', 'n', 's', 'I',
'our', 'for', 'are', 'He', 'he', 'of', 'his', 'a', 'So',
"It's", 'theres', 'as')
trashwords.pattern <- apply(djt.dude, 1, function(x) !any(x %in% trashwords))
djt.final <- subset(djt.dude, trashwords.pattern)
wordcloud2(djt.final, size = 10, color = "random-light", backgroundColor = "grey")
trashwords <- c('https', 'RT', 't', 'and' , 'co', 'is','what', 'on',
'you', 'not', 'has', 'Dear', 'do', 'It', 'about', 'The',
'have', 'an', 'U', 'to', 'the', ' of', 'n', 's', 'I',
'our', 'for', 'are', 'He', 'he', 'of', 'his', 'a', 'So',
"It's", 'theres', 'as', 'this', 'in', 'one','all','one',
'been', 'part', 'When'
)
trashwords.pattern <- apply(djt.dude, 1, function(x) !any(x %in% trashwords))
djt.final <- subset(djt.dude, trashwords.pattern)
wordcloud2(djt.final, size = 10, color = "random-light", backgroundColor = "grey")
trashwords <- c('https', 'RT', 't', 'and' , 'co', 'is','what', 'on',
'you', 'not', 'has', 'Dear', 'do', 'It', 'about', 'The',
'have', 'an', 'U', 'to', 'the', ' of', 'n', 's', 'I',
'our', 'for', 'are', 'He', 'he', 'of', 'his', 'a', 'So',
"It's", 'theres', 'as', 'this', 'in', 'one','all','one',
'been', 'part', 'When','may', 'that', 'or', 'me','K', "by"
)
trashwords.pattern <- apply(djt.dude, 1, function(x) !any(x %in% trashwords))
djt.final <- subset(djt.dude, trashwords.pattern)
wordcloud2(djt.final, size = 10, color = "random-light", backgroundColor = "grey")
wordcloud2(djt.final, size = 20, color = "random-light", backgroundColor = "grey")
trashwords <- c('https', 'RT', 't', 'and' , 'co', 'is','what', 'on',
'you', 'not', 'has', 'Dear', 'do', 'It', 'about', 'The',
'have', 'an', 'U', 'to', 'the', ' of', 'n', 's', 'I',
'our', 'for', 'are', 'He', 'he', 'of', 'his', 'a', 'So',
"It's", 'theres', 'as', 'this', 'in', 'one','all','one',
'been', 'part', 'When','may', 'that', 'or', 'me','K', "by",
'now', 'You', 'off', 'A', 'so', 'was')
trashwords.pattern <- apply(djt.dude, 1, function(x) !any(x %in% trashwords))
djt.final <- subset(djt.dude, trashwords.pattern)
wordcloud2(djt.final, size = 20, color = "random-light", backgroundColor = "grey")
wordcloud2(djt.final, minSize = 3, gridSize = 20, color = "random-light", backgroundColor = "grey")
wordcloud2(djt.final, minSize = 3, gridSize = 1, color = "random-light", backgroundColor = "grey")
wordcloud2(djt.final, minSize = 3, color = "random-light", backgroundColor = "grey")
wordcloud2(djt.final, minSize = 1, color = "random-light", backgroundColor = "grey")
wordcloud2(djt.final, color = "random-light", backgroundColor = "grey")
source('~/.active-rstudio-document', echo=TRUE)
wordcloud2(djt.final, size = 20 color = "random-light", backgroundColor = "grey")
wordcloud2(djt.final, size = 20, color = "random-light", backgroundColor = "grey")
wordcloud2(djt.final, size = 20, minSize = 2 color = "random-light", backgroundColor = "grey")
wordcloud2(djt.final, size = 20, minSize = 2, color = "random-light", backgroundColor = "grey")
trashwords <- c('https', 'RT', 't', 'and' , 'co', 'is','what', 'on',
'you', 'not', 'has', 'Dear', 'do', 'It', 'about', 'The',
'have', 'an', 'U', 'to', 'the', ' of', 'n', 's', 'I',
'our', 'for', 'are', 'He', 'he', 'of', 'his', 'a', 'So',
"It's", 'theres', 'as', 'this', 'in', 'one','all','one',
'been', 'part', 'When','may', 'that', 'or', 'me','K', "by",
'now', 'You', 'off', 'A', 'so', 'was','ha', 'know', 'Because',
'would', 'just', 'him', 'On', 'will')
trashwords.pattern <- apply(djt.dude, 1, function(x) !any(x %in% trashwords))
djt.final <- subset(djt.dude, trashwords.pattern)
wordcloud2(djt.final, size = 20, minSize = 2, color = "random-light", backgroundColor = "grey")
install.packages("ggmap", "mapproj")
source('~/.active-rstudio-document', echo=TRUE)
map <- get_map(location = c(lon = 308088 , lat = 2773742) zoom = 10, language = "zh-TW")
map <- get_map(location = c(lon = 308088 , lat = 2773742), zoom = 10, language = "zh-TW")
map <- get_map(location = c(lon = 120.233937, lat = 22.992013), zoom = 10,
maptype = "toner-lite",language = "zh-TW")
ggmap(map)
library(xml2)
data <- read_html("C:/UsersHeidi Chen/Documents/waterQuality.xml")
data <- read_xml("C:/UsersHeidi Chen/Documents/waterQuality.xml")
data <- read_xml("C:/Users/Heidi Chen/Documents/waterQuality.xml")
rm(list = ls())
data <- read_xml("C:/Users/Heidi Chen/Documents/waterQuality.xml")
View(data)
data <- data.frame(data)
xml_data <- xmlToList(data)
"csx" <= "is awesome"
power <- function (x){
x ** x
}
a <- 5
power(a)
a
power <- function (x){
x ** x
x
}
a <- 5
power(a)
##Though power(a) outputs a**a, variable remains unchanged.
a
power <- function (x){
x ** x
}
a <- 5
power(a)
##Though power(a) outputs a**a, variable remains unchanged.
a
power <- function (x){
x <- x ** x
x
}
a <- 5
power(a)
##Though power(a) outputs a**a, variable remains unchanged.
a
str(a)
mails <- c("john.doe@ivyleague.edu", "education@world.gov", "dalai.lama@peace.org", "invalid.edu", "quant@bigdatacollege.edu", "cookie.monster@sesame.tv")
#using grepl to match for "edu
grepl("edu", emails)
emails <- c("john.doe@ivyleague.edu", "education@world.gov", "dalai.lama@peace.org", "invalid.edu", "quant@bigdatacollege.edu", "cookie.monster@sesame.tv")
#using grepl to match for "edu
grepl("edu", emails)
grep("edu", emails)
#grepl returns a logic while grep just matches the pattern specified.
rm(list = ls())
?rm
?ls
library(gapminder)
gapminder
carbon <- data("CO2")
carbon
carbon <- data("CO2")
head(carbon)
CO2
carbon <- CO2
rm(CO2)
?filter
?arrange
?arrange
??arrange
carbon <- data("CO2")
carbon %>%
filter(., Treatment == "chilled") %>%
arrange(., desc(conc))
library(c(dplyr,magrittr))
library(dplyr)
library(magrittr)
library(dplyr)
library(magrittr)
carbon <- data("CO2")
carbon %>%
filter(., Treatment == "chilled") %>%
arrange(., desc(conc))
rm(list = ls())
data("CO2")
data("CO2")
CO2 %>%
filter(., Treatment == "chilled") %>%
arrange(., desc(conc))
data("CO2")
carbon <- CO2 %>%
filter(., Treatment == "chilled") %>%
#filter verb
arrange(., desc(conc))
#Arrange verb - sorts a table based on a variable, here we put it in descending order using desc().
View(CO2)
data("CO2")
carbon <- CO2 %>%
filter(., Treatment == "chilled") %>%
#filter verb
arrange(., desc(conc)) %>%
#Arrange verb - sorts a table based on a variable, here we put it in descending order using desc().
mutate(conc_per_t = conc / 100)
#Mutate verb here enables us to add in another column called conc_per_t. Helps in computing new variables.
library(dplyr)
library(magrittr)
library(ggplot2)
View(carbon)
ggplot(carbon, aes(x = conc, y = uptake, fill = Plant)) + geom_density(alpha = 0.3)
ggplot(carbon, aes(x = "conc", y = "uptake", fill = Plant)) + geom_density(alpha = 0.3)
ggplot(carbon, aes(x = "Plant", y = "conc")) + geom_histogram()
ggplot(carbon, aes(x = "Plant") + geom_histogram()
ggplot(carbon, aes(x = "Plant")) + geom_histogram()
ggplot(carbon, aes(x = conc, y = Type)) + geom_histogram()
ggplot(carbon, aes(x = conc) + geom_histogram()
ggplot(carbon, aes(x = conc)) + geom_histogram()
ggplot(CO2, aes(x = conc)) + geom_point()
ggplot(CO2, aes(x = conc, y = uptake)) + geom_point()
View(CO2)
View(CO2)
ggplot(CO2, aes(x = conc, y = uptake, color = treatment)) + geom_point()
ggplot(CO2, aes(x = conc, y = uptake, color = Treatment)) + geom_point()
ggplot(CO2, aes(x = Plant, y = uptake, color = Treatment, size = conc)) + geom_point()
ggplot(CO2, aes(x = Plant, y = uptake, color = Treatment, size = conc)) + geom_point() + facet_grid(~Type)
source('~/.active-rstudio-document', echo=TRUE)
setwd("~/GitHub/CSX_RProject_Summer_2018/week_3/songs_data")
source('~/.active-rstudio-document', echo=TRUE)
txt_files = list.files(pattern = "winner_*.txt");
data_list = lapply(txt_files, function(file) assign(file, scan(file, what = "character"), envir = .GlobalEnv))
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
rm(list = ls())
source('~/.active-rstudio-document', echo=TRUE)
setwd("C:/Users/Heidi Chen/Documents/GitHub/CSX_RProject_Summer_2018/week_3/songs_data")
source('~/.active-rstudio-document', echo=TRUE)
rm(list = ls())
readtext::readtext("C:/Users/Heidi Chen/Documents/GitHub/CSX_RProject_Summer_2018/week_3/songs_data/*.txt")
files_list <- list.files(path ".", recursive = TRUE,
pattern = "\\.txt$", full.names = TRUE)
library(tidyverse)
files_list <- list.files(path ".", recursive = TRUE,
pattern = "\\.txt$", full.names = TRUE)
files_list <- list.files(path = ".", recursive = TRUE,
pattern = "*.txt$", full.names = TRUE)
df <- files_list %>%
set_names(.) %>%
map_df(read_table2, .id = "FileName")
View(df)
rm(df)
for (f in files_list) {
tempData = scan( f, what="character")
data <- c(data,tempData)
}
head(data)
rm(data)
rm(f)
rm(tempData)
df <- files_list %>%
map_dfr(readLines, .id = "FileName")
library(dplyr)
df <- files_list %>%
map_dfr(readLines, .id = "FileName")
df <- files_list %>%
map_df(readLines, .id = "FileName")
df <- files_list %>%
map_df(read_table2, .id = "FileName")
rm(df)
for (f in files_list){
songs <- read_lines(.)
}
for (f in files_list){
songs <- read_lines(files_list[f])
}
files_list
songs <- lapply(files_list, read_file)
songs <- lapply(files_list, read_file) %>%
as.data.frame(.)
View(songs)
##Obtain the list of songs
songs <- lapply(files_list, read_file)
songs <- lapply(files_list, read_file) %>%
rbind(.)
songs <- lapply(files_list, read_file) %>%
unlist(.)
##Obtain the list of songs
songs <- lapply(files_list, read_file)
songs <- lapply(files_list, read_file) %>%
data_frame(.)
View(songs)
Names <- read.csv("~/GitHub/CSX_RProject_Summer_2018/week_3/songs_data/billboardwinners.csv", sep = ".")
View(Names)
View(Names)
Names$X = NULL
Names1 <- as.vector(Names)
Names1 <- as.vector(t(Names))
Names <- as.vector(t(Names))
songs <- lapply(files_list, read_file) %>%
data_frame(.) %>%
names(.,) <- Names
##Obtain the list of songs
songs <- lapply(files_list, read_file) %>%
data_frame(.) %>%
names(.,) = Names
name(songs$.) <- Names
names(songs$.) <- Names
View(songs)
row.names(songs$.) <- Names
songs <- lapply(files_list, read_file) %>%
data_frame(.) %>%
row.names(songs$., Names)
##Obtain the list of songs
songs <- lapply(files_list, read_file) %>%
data_frame(.) %>%
row.names(., Names)
songs <- lapply(files_list, read_file) %>%
data_frame(.) %>%
row.names(.) <- Names
row.names(songs$.1) <- Names
row.names(songs$.) <- Names
rm(Names1)
Names
Names <- read.csv("~/GitHub/CSX_RProject_Summer_2018/week_3/songs_data/billboardwinners.csv", sep = ".")
Names$X = NULL
songs <- lapply(files_list, read_file) %>%
data_frame(.) %>%
cbind(., Names)
str_split_fixed(Names$ï..song_name..artist..year, ",",3)
Names %>%
str_split_fixed(Names$ï..song_name..artist..year, ",",3) %>%
`colnames<-`("Song", "Artist", "Year")
colnames(Names)<-c("Song", "Artist", "Year")
Names <- str_split_fixed(Names$ï..song_name..artist..year, ",",3)
colnames(Names)<-c("Song", "Artist", "Year")
Names
View(Names)
View(Names)
songs <- lapply(files_list, read_file) %>%
data_frame(.) %>%
cbind(., Names)
##housekeeping
rm(c(f, files_list))
##housekeeping
rm(f, files_list)
