knitr::opts_chunk$set(echo = TRUE)
plot(pressure)
summary(cars)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(marmap)
knitr::opts_chunk$set(echo = TRUE)
library(marmap)
install.packages(marmap)
library(knitr)
kable(mtcars[1:5,], caption = "A knitr kable")
knitr::opts_chunk$set(echo = TRUE)
squad_a = 9 + 1 + 1
print(squad_a)
squad_a = 9 + 1 + 1
squad_b = 7 + 1 + 1
squad_c = 7 + 1
platoon_a = squad_a + squad_b + squad_c
print(platoon_a)
sergeant_b_name = "Jackie Wu"
sergeant_b_present = FALSE
print(typeof(sergeant_b_name))
print(typeof(sergeant_b_present))
print(typeof(squad_b))
sergeant_b_name = "Jackie Wu"
sergeant_b_present = FALSE
print(typeof(sergeant_b_name))
print(typeof(sergeant_b_present))
print(typeof(28))
sergeant_b_name = "Jackie Wu"
sergeant_b_present = FALSE
print(typeof(sergeant_b_name))
print(typeof(sergeant_b_present))
print(typeof(squad_b))
sergeant_b_name = "Jackie Wu"
sergeant_b_present = FALSE
print(class(sergeant_b_name))
print(classf(sergeant_b_present))
sergeant_b_name = "Jackie Wu"
sergeant_b_present = FALSE
print(class(sergeant_b_name))
print(class(sergeant_b_present))
print(class(squad_b))
evil_soldiers <- c(22.5, 123.9, 44.8)
just_soldiers <- c(30.7, 60.3, 20.1)
excess_or_lack <- evil_soldiers - just_soldiers
print(excess_or_lack)
evil_soldiers <- c(22.5, 123.9, 44.8)
just_soldiers <- c(30.7, 60.3, 20.1)
excess_or_lack <- just_soldiers - evil_soldiers
print(excess_or_lack)
army_types <- c("Navy", "Land", "Air")
names(excess_or_lack) <- army_types
print(excess_or_lack)
evil_soldiers <- c(44.8, 123.9, 22.5)
just_soldiers <- c(30.7, 60.3, 9.1)
excess_or_lack <- just_soldiers - evil_soldiers
print(excess_or_lack)
evil_soldiers <- c(29.8, 123.9, 18.5)
just_soldiers <- c(30.7, 60.3, 9.1)
excess_or_lack <- just_soldiers - evil_soldiers
print(excess_or_lack)
evil_soldiers <- c(23.8, 123.9, 17.5)
just_soldiers <- c(30.7, 60.3, 9.1)
excess_or_lack <- just_soldiers - evil_soldiers
print(excess_or_lack)
evil_soldiers <- c(25.8, 123.9, 17.5)
just_soldiers <- c(30.7, 60.3, 9.1)
excess_or_lack <- just_soldiers - evil_soldiers
print(excess_or_lack)
army_types <- c("Navy", "Land", "Air")
names(excess_or_lack) <- army_types
print(excess_or_lack)
total_just_soldiers <- sum(just_soldiers)
total_evil_soldiers <- sum(evil_soldiers)
total_evil_soldiers > total_just_soldiers
names(evil_soldiers) <- army_types
names(just_soldiers) <- army_types
just_navy <- just_soldiers["Navy"]
evil_navy <- evil_soldiers[c(1)]
evil_navy > just_navy
selection_army <- excess_or_lack[c(1:3)] > 0
print(selection_army)
selection_army <- excess_or_lack[c(1:3)] > 0
print(selection_army)
winning_army <- excess_or_lack[selection_army]
print(winning_army)
knitr::opts_chunk$set(echo = TRUE)
1 + 1
install.packages("twitteR", "ROAuth")
install.packages("twitteR", "RCurl", "RJSONIO", "stringr")
download.file(url="http://curl.haxx.se/ca/caert.pem",destfile = "cacert.pem")
download.file(url="http://curl.haxx.se/ca/cacert.pem",destfile = "cacert.pem")
library(twitteR)
library(ROAuth)
install.packages("ROAuth")
library(ROAuth)
cred <- OAuthFactory$new(consumerKey= 'JsRcDjPiArq9OzDcJwgX6mcae',
consumerSecret = 'TAwovz3ek8pkxY8ZU1bsMH77GjpXHtxhTjvKIkGDdZ2A5lZtJu',
requestURL = 'https://api.twitter.com/oauth/request_token',
accessURL = 'https://api.twitter.com/oauth/access_token'
authURL = 'https://api.twitter.com/oauth/authorize')
cred <- OAuthFactory$new(consumerKey= 'JsRcDjPiArq9OzDcJwgX6mcae',
consumerSecret = 'TAwovz3ek8pkxY8ZU1bsMH77GjpXHtxhTjvKIkGDdZ2A5lZtJu',
requestURL = 'https://api.twitter.com/oauth/request_token',
accessURL = 'https://api.twitter.com/oauth/access_token',
authURL = 'https://api.twitter.com/oauth/authorize')
cred$handshake(cainfo = "cacert.pem")
save(cred, file = "twitter authetication.Rdata")
load("twitter authentication.Rdata")
registerTwitterOAuth(cred)
?setup_twitter_oauth
setup_twitter_oauth("JsRcDjPiArq9OzDcJwgX6mcae", "TAwovz3ek8pkxY8ZU1bsMH77GjpXHtxhTjvKIkGDdZ2A5lZtJu")
setup_twitter_oauth("JsRcDjPiArq9OzDcJwgX6mcae",
"TAwovz3ek8pkxY8ZU1bsMH77GjpXHtxhTjvKIkGDdZ2A5lZtJu",
"1017636712934039552-8qfYxxyBKDOHHZANmtkpmiIFTMASka",
"6rx586u4wwh0EcSAzQfhRT4JXn3XCYachsJfRjDSgSDM3")
tweets <- searchTwitter(searchString = "realDonaldTrump", n = 100)
View(tweets)
View(tweets)
tweets.df <- twListToDF(tweets)
View(tweets.df)
View(tweets.df)
View(tweets.df)
View(tweets.df)
tweets.v <- as.vector(DJT.tweets$text)
tweets.v <- as.vector(tweets$text)
tweets.v
View(tweets.df)
View(tweets.df)
tweets.v <- as.vector(tweets[,1])
tweets.v <- as.vector(tweets[1,])
tweets.v <- tweets.df[,"text"]
tweets.v
tweets.v <- tweets.df[,"text"] %>%
c(,)
library(magrittr)
tweets.v <- tweets.df[,"text"] %>%
c(,)
tweets.v <- tweets.df[,"text"] %>%
c(.)
tweets.v
tweets.df <- twListToDF(tweets)
tweets.v <- tweets.df[,"text"] %>%
paste0(., collapse = NULL)
tweets.v
tweets.v <- tweets.df[,"text"] %>%
paste0(tweets.v, collapse = NULL)
tweets.v <- tweets.df[,"text"] %>%
twit <- paste0(tweets.v, collapse = NULL)
twit <- paste0(tweets.v, collapse = NULL)
remove(twit)
tweets.merged <- paste(tweets.v, sep = " ")
tweets.merged
tweets.merged <- paste(c(tweets.v), sep = " ")
tweets.merged <- unlist(tweets.v)
tweets.merged
tweets.merged <- list(tweets.v)
tweets.merged
View(tweets.merged)
View(tweets.merged)
tweets.merged[[1]]
twit <- paste(tweets.merged, sep = "")
twit
twit2 <- paste(tweets.v, sep = "")
remove(twit2)
gsub('[[:punct:]]+','', twit)
library(twitteR)
library(ROAuth)
library(magrittr)
setup_twitter_oauth("JsRcDjPiArq9OzDcJwgX6mcae",
"TAwovz3ek8pkxY8ZU1bsMH77GjpXHtxhTjvKIkGDdZ2A5lZtJu",
"1017636712934039552-8qfYxxyBKDOHHZANmtkpmiIFTMASka",
"6rx586u4wwh0EcSAzQfhRT4JXn3XCYachsJfRjDSgSDM3")
tweets <- searchTwitter(searchString = "realDonaldTrump", n = 100)
tweets.df <- twListToDF(tweets)
tweets.v <- tweets.df[,"text"]
twit <- paste(tweets.merged, sep = "")
gsub('[[:punct:]]+','', " ", twit)
twit
gsub('[[:punct:]]+',' ', twit)
tweet.split<- strsplit(twit, " ")
tweet.split
djt.df <- as.data.frame(table(tweet.split))
djt.df
adj.djt.df <- sapply(djt.df, order, decreasing  = TRUE)
adj.djt.df
View(adj.djt.df)
remove(adj.djt.df)
View(djt.df)
order(djt.df, decreasing = TRUE)
djt.dude <- order(djt.df, decreasing = TRUE)
djt.dude <- djt.df[order(djt.df$Freq, decreasing = TRUE),]
View(djt.dude)
wordcloud2(djt.dude., size = 1.5, color = "random-light", backgroundColor = "grey")
library(wordcloud2)
wordcloud2(djt.dude., size = 1.5, color = "random-light", backgroundColor = "grey")
wordcloud2(djt.dude, size = 1.5, color = "random-light", backgroundColor = "grey")
rm(list = ls())
wordcloud2(djt.dude, size = 1.5, color = "random-light", backgroundColor = "grey")
source('~/.active-rstudio-document', echo=TRUE)
tweets.df <- twListToDF(tweets)
tweets.v <- tweets.df[,"text"] %>%
list(.) %>%
paste(., sep = "")
tweets.v
tweets.char <- tweets.df[,"text"] %>%
list(.) %>%
paste(., sep = "") %>%
gsub('[[:punct:]]+',' ',.)
remove(tweets.v)
tweets.char <- tweets.df[,"text"] %>%
list(.) %>%
paste(., sep = "") %>%
gsub('[[:punct:]]+',' ',.) %>%
strsplit(., " ")
djt.df <- as.data.frame(table(tweets.char))
djt.dude <- djt.df[order(djt.df$Freq, decreasing = TRUE),]
View(djt.dude)
View(djt.dude)
wordcloud2(djt.dude, size = 1.5, color = "random-light", backgroundColor = "grey")
wordcloud2(djt.dude, size = 3, color = "random-light", backgroundColor = "grey")
wordcloud2(djt.dude, size = 10, color = "random-light", backgroundColor = "grey")
djt.dude$tweets.char[trashwords]
trashwords <- c('https', 'RT', 't', 'and' , 'co', 'is','what', 'on',
'you', 'not', 'has', 'Dear', 'do', 'It', 'about', 'The'
'have', 'an')
trashwords <- c('https', 'RT', 't', 'and' , 'co', 'is','what', 'on',
'you', 'not', 'has', 'Dear', 'do', 'It', 'about', 'The',
'have', 'an')
djt.dude$tweets.char[trashwords]
remove(djt.dude$tweets.char[trashwords])
subset(djt.dude, tweets.char!=trashwords)
djt.dude <- subset(djt.dude, tweets.char!=trashwords)
djt.final <- subset(djt.dude, tweets.char!=trashwords)
remove(djt.final)
djt.dude[djt.dude$tweets.char != trashwords]
djt.dude[djt.dude$tweets.char == trashwords]
library(dplyr)
trashwords.pattern <- apply(djt.dude, 1, function(x) !any(x %in% trashwords))
djt.final <- subset(djt.dude, trashwords.pattern)
View(djt.final)
View(djt.final)
trashwords <- c('https', 'RT', 't', 'and' , 'co', 'is','what', 'on',
'you', 'not', 'has', 'Dear', 'do', 'It', 'about', 'The',
'have', 'an', " ")
trashwords.pattern <- apply(djt.dude, 1, function(x) !any(x %in% trashwords))
djt.final <- subset(djt.dude, trashwords.pattern)
View(djt.final)
View(djt.final)
wordcloud2(djt.dude, size = 10, color = "random-light", backgroundColor = "grey")
wordcloud2(djt.final, size = 10, color = "random-light", backgroundColor = "grey")
trashwords <- c('https', 'RT', 't', 'and' , 'co', 'is','what', 'on',
'you', 'not', 'has', 'Dear', 'do', 'It', 'about', 'The',
'have', 'an', 'U', 'to', 'the', ' of', 'n', 's', 'I',
'our', 'for', 'are', 'He', 'he')
trashwords.pattern <- apply(djt.dude, 1, function(x) !any(x %in% trashwords))
djt.final <- subset(djt.dude, trashwords.pattern)
wordcloud2(djt.final, size = 10, color = "random-light", backgroundColor = "grey")
trashwords <- c('https', 'RT', 't', 'and' , 'co', 'is','what', 'on',
'you', 'not', 'has', 'Dear', 'do', 'It', 'about', 'The',
'have', 'an', 'U', 'to', 'the', ' of', 'n', 's', 'I',
'our', 'for', 'are', 'He', 'he', 'of', 'his', 'a', 'So',
"It's", 'theres', 'as')
trashwords.pattern <- apply(djt.dude, 1, function(x) !any(x %in% trashwords))
djt.final <- subset(djt.dude, trashwords.pattern)
wordcloud2(djt.final, size = 10, color = "random-light", backgroundColor = "grey")
trashwords <- c('https', 'RT', 't', 'and' , 'co', 'is','what', 'on',
'you', 'not', 'has', 'Dear', 'do', 'It', 'about', 'The',
'have', 'an', 'U', 'to', 'the', ' of', 'n', 's', 'I',
'our', 'for', 'are', 'He', 'he', 'of', 'his', 'a', 'So',
"It's", 'theres', 'as', 'this', 'in', 'one','all','one',
'been', 'part', 'When'
)
trashwords.pattern <- apply(djt.dude, 1, function(x) !any(x %in% trashwords))
djt.final <- subset(djt.dude, trashwords.pattern)
wordcloud2(djt.final, size = 10, color = "random-light", backgroundColor = "grey")
trashwords <- c('https', 'RT', 't', 'and' , 'co', 'is','what', 'on',
'you', 'not', 'has', 'Dear', 'do', 'It', 'about', 'The',
'have', 'an', 'U', 'to', 'the', ' of', 'n', 's', 'I',
'our', 'for', 'are', 'He', 'he', 'of', 'his', 'a', 'So',
"It's", 'theres', 'as', 'this', 'in', 'one','all','one',
'been', 'part', 'When','may', 'that', 'or', 'me','K', "by"
)
trashwords.pattern <- apply(djt.dude, 1, function(x) !any(x %in% trashwords))
djt.final <- subset(djt.dude, trashwords.pattern)
wordcloud2(djt.final, size = 10, color = "random-light", backgroundColor = "grey")
wordcloud2(djt.final, size = 20, color = "random-light", backgroundColor = "grey")
trashwords <- c('https', 'RT', 't', 'and' , 'co', 'is','what', 'on',
'you', 'not', 'has', 'Dear', 'do', 'It', 'about', 'The',
'have', 'an', 'U', 'to', 'the', ' of', 'n', 's', 'I',
'our', 'for', 'are', 'He', 'he', 'of', 'his', 'a', 'So',
"It's", 'theres', 'as', 'this', 'in', 'one','all','one',
'been', 'part', 'When','may', 'that', 'or', 'me','K', "by",
'now', 'You', 'off', 'A', 'so', 'was')
trashwords.pattern <- apply(djt.dude, 1, function(x) !any(x %in% trashwords))
djt.final <- subset(djt.dude, trashwords.pattern)
wordcloud2(djt.final, size = 20, color = "random-light", backgroundColor = "grey")
wordcloud2(djt.final, minSize = 3, gridSize = 20, color = "random-light", backgroundColor = "grey")
wordcloud2(djt.final, minSize = 3, gridSize = 1, color = "random-light", backgroundColor = "grey")
wordcloud2(djt.final, minSize = 3, color = "random-light", backgroundColor = "grey")
wordcloud2(djt.final, minSize = 1, color = "random-light", backgroundColor = "grey")
wordcloud2(djt.final, color = "random-light", backgroundColor = "grey")
source('~/.active-rstudio-document', echo=TRUE)
wordcloud2(djt.final, size = 20 color = "random-light", backgroundColor = "grey")
wordcloud2(djt.final, size = 20, color = "random-light", backgroundColor = "grey")
wordcloud2(djt.final, size = 20, minSize = 2 color = "random-light", backgroundColor = "grey")
wordcloud2(djt.final, size = 20, minSize = 2, color = "random-light", backgroundColor = "grey")
trashwords <- c('https', 'RT', 't', 'and' , 'co', 'is','what', 'on',
'you', 'not', 'has', 'Dear', 'do', 'It', 'about', 'The',
'have', 'an', 'U', 'to', 'the', ' of', 'n', 's', 'I',
'our', 'for', 'are', 'He', 'he', 'of', 'his', 'a', 'So',
"It's", 'theres', 'as', 'this', 'in', 'one','all','one',
'been', 'part', 'When','may', 'that', 'or', 'me','K', "by",
'now', 'You', 'off', 'A', 'so', 'was','ha', 'know', 'Because',
'would', 'just', 'him', 'On', 'will')
trashwords.pattern <- apply(djt.dude, 1, function(x) !any(x %in% trashwords))
djt.final <- subset(djt.dude, trashwords.pattern)
wordcloud2(djt.final, size = 20, minSize = 2, color = "random-light", backgroundColor = "grey")
install.packages("ggmap", "mapproj")
source('~/.active-rstudio-document', echo=TRUE)
map <- get_map(location = c(lon = 308088 , lat = 2773742) zoom = 10, language = "zh-TW")
map <- get_map(location = c(lon = 308088 , lat = 2773742), zoom = 10, language = "zh-TW")
map <- get_map(location = c(lon = 120.233937, lat = 22.992013), zoom = 10,
maptype = "toner-lite",language = "zh-TW")
ggmap(map)
library(xml2)
data <- read_html("C:/UsersHeidi Chen/Documents/waterQuality.xml")
data <- read_xml("C:/UsersHeidi Chen/Documents/waterQuality.xml")
data <- read_xml("C:/Users/Heidi Chen/Documents/waterQuality.xml")
rm(list = ls())
data <- read_xml("C:/Users/Heidi Chen/Documents/waterQuality.xml")
View(data)
data <- data.frame(data)
xml_data <- xmlToList(data)
"csx" <= "is awesome"
setwd("~/GitHub/CSX_RProject_Summer_2018/week_3")
TestData = read.csv('./wine_data/winemag-data_first150k.csv')
view(TestData)
View(TestData)
TestData = read.csv('./wine_data/winemag-data_first150k.csv', col_types = cols(X1 = col_skip()))
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
library(knitr)
library(tidytext)
library(tidyverse)
library(knitr)
library(tidytext)
TestData = read.csv('./wine_data/winemag-data_first150k.csv', col_types = cols(X1 = col_skip()))
TestData <- read.csv('./wine_data/winemag-data_first150k.csv')
TestData[1] <- NULL
missing_data <- TestData %>%
sapply(TestData, function(x) sum(is.na(x)))
missing_data <- TestData %>%
sapply(., function(x) sum(is.na(x)))
missing_data
missing_data <- TestData %>%
sapply(., function(x) sum(is.na(x)))
ggplot(aes(x = missing_data)) + geom_bar()
TestData[!complete.cases(TestData),]
library(tidyverse)
library(knitr)
library(tm)
library(readr)
TestData <- TestData[!complete.cases(TestData),]
TestData$Grade<- cut(TestData$points, c(0,50,60,70,80,90,95,100), right = FALSE, labels = c("undrinkable", "not recommended", "Average", "Above Average", "Very good", "Superior", "Exceptional"))
View(TestData)
View(TestData)
ggplot(TestData, aes(x = points)) + geom_histogram() + ggtitle("Frequencies of each point")
ggplot(TestData, aes(x = points)) + geom_histogram(binwidth = 40) + ggtitle("Frequencies of each point")
ggplot(TestData, aes(x = points)) + geom_histogram(binwidth = 33) + ggtitle("Frequencies of each point")
ggplot(TestData, aes(x = points)) + geom_histogram(binwidth = 30) + ggtitle("Frequencies of each point")
ggplot(TestData, aes(x = points)) + geom_histogram(binwidth = 5) + ggtitle("Frequencies of each point")
ggplot(TestData, aes(x = points)) + geom_histogram(binwidth = 1) + ggtitle("Frequencies of each point")
ggplot(TestData, aes(x = points, fill = Grade)) + geom_histogram(binwidth = 1) + ggtitle("Frequencies of each point")
ggplot(TestData, aes(x = points, fill = Grade)) + geom_histogram(binwidth = 1) + ggtitle("Points showing how wines have been categorised by grade")
View(TestData)
View(TestData)
ggplot(TestData, aes(x = price, y = score)) + geom_point()
ggplot(TestData, aes(x = price, y = points)) + geom_point()
rm(list = ls())
library(tidyverse)
library(knitr)
library(tm)
library(readr)
TestData <- read.csv('./wine_data/winemag-data_first150k.csv')
TestData[1] <- NULL
View(TestData)
View(TestData)
Wine_complete <- TestData[!complete.cases(TestData),]
View(Wine_complete)
View(Wine_complete)
Wine_complete <- TestData[complete.cases(TestData),]
View(Wine_complete)
View(Wine_complete)
Wine_complete <- TestData[complete.cases(TestData),]
wine_complete <- TestData[complete.cases(TestData),]
ggplot(wine_complete, aes(x = price, y = points)) + geom_point()
remove(Wine_complete)
wine_complete$econ_score <- wine$points / wine$price
wine_complete$econ_score <- wine_complete$points / wine_complete$price
View(wine_complete)
wine_complete$econ_score <- wine_complete$points / wine_complete$price
sapply(wine_complete,max)
wine_complete$econ_score <- wine_complete$points / wine_complete$price
max(wine_complete$econ_score)
wine_complete$econ_score <- wine_complete$points / wine_complete$price
print(wine_complete[max(wine_complete$econ_score)])
wine_complete$econ_score <- wine_complete$points / wine_complete$price
which.max(wine_complete$econ_score)
wine_complete$econ_score <- wine_complete$points / wine_complete$price
wine_complete[which.max(wine_complete$econ_score)]
wine_complete$econ_score <- wine_complete$points / wine_complete$price
wine_complete[which.max(wine_complete$econ_score)]
wine_complete$econ_score <- wine_complete$points / wine_complete$price
row(wine_complete)[wine_complete == max(wine_complete$econ_score)]
wine_complete$econ_score <- wine_complete$points / wine_complete$price
seq(along=wine_complete$econ_score)[wine_complete$econ_score==max(wine_complete$econ_score)]
wine_complete$econ_score <- wine_complete$points / wine_complete$price
ggplot(wine_complete, aes(x = 1, y = econ_score)) + geom_boxplot()
