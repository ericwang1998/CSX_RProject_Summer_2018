install.packages("leaflet")
library(leaflet)
library(magrittr)
m <- leaflet() %>%
addTiles() %>%
addMarkers(lng=174.768, lat=-36.852, popup = "The birthplace of R" )
m
m <- leaflet() %>%
addTiles() %>%
addMarkers(lng=1.376886, lat=-103.758795, popup = "Ryan was here" )
m
m <- leaflet() %>%
addTiles() %>%
addMarkers(lng=1.376886, lat=103.758795, popup = "Ryan was here" )
m
m <- leaflet() %>%
addTiles() %>%
addMarkers(lng=103.758795, lat=1.376922, popup = "Ryan was here" )
m
read.csv("~/GitHub/CSX_RProject_Summer_2018/week_5/world_bank/API_NY.GDP.PCAP.CD_DS2_en_csv_v2_10051784.csv")
read.csv("~/GitHub/CSX_RProject_Summer_2018/week_5/data/world_bank/API_NY.GDP.PCAP.CD_DS2_en_csv_v2_10051784.csv")
read.csv("~/GitHub/CSX_RProject_Summer_2018/week_5/data/world_bank/API_NY.GDP.PCAP.CD_DS2_en_csv_v2_10051784.csv", skip = 4)
gdp_world<- read.csv("~/GitHub/CSX_RProject_Summer_2018/week_5/data/world_bank/API_NY.GDP.PCAP.CD_DS2_en_csv_v2_10051784.csv", skip = 4)
str(gdp_world)
gdp_world<- gdp_world[-gdp_world$X]
gdp_world<- -gdp_world$X
gdp_world<- read.csv("~/GitHub/CSX_RProject_Summer_2018/week_5/data/world_bank/API_NY.GDP.PCAP.CD_DS2_en_csv_v2_10051784.csv", skip = 4)
View(gdp_world)
gdp_raw<- read.csv("~/GitHub/CSX_RProject_Summer_2018/week_5/data/world_bank/API_NY.GDP.PCAP.CD_DS2_en_csv_v2_10051784.csv", skip = 4)
rm(list = rm())
rm(list = ls())
gdp_raw<- read.csv("~/GitHub/CSX_RProject_Summer_2018/week_5/data/world_bank/API_NY.GDP.PCAP.CD_DS2_en_csv_v2_10051784.csv", skip = 4)
gdp_world <- gdp_raw$Country.Name + gdp_raw$X2017
gdp_world <- cbind(gdp_raw$Country.Name, gdp_raw$X2017)
View(gdp_world)
gdp_world <-gdp_raw$Country.Name
gdp_world <-as.data.frame(gdp_raw$Country.Name)
gdp_world <-as.data.frame(gdp_raw$Country.Name) %>%
cbind(., gdp_raw$X2017)
View(gdp_world)
library(maps)
mapCountries <- map(database = "world", regions = gdp_world$`gdp_raw$Country.Name)
mapCountries <- map(database = "world", regions = gdp_world$`gdp_raw$Country.Name, fill = TRUE, plot = FALSE)
mapCountries <- map(database = "world", regions = gdp_world$`gdp_raw$Country.Name, fill = TRUE, plot = FALSE)
na
return()
mapCountries <- map(database = "world", regions = gdp_world$`gdp_raw$Country.Name, fill = TRUE, plot = FALSE)
mapCountries <- map(database = "world", regions = gdp_world$`gdp_raw$Country.Name, fill = TRUE, plot = FALSE)
leaflet(data = mapCountries) %>%
addTiles() %>%
addPolygons(fill = topo.colors(10, alpha =  NULL), stroke = FALSE)
mapCountries <- map(database = "world", regions = gdp_world$`gdp_raw$Country.Name, fill = TRUE, plot = FALSE)
mapCountries <- map(database = "world", regions = gdp_world$Country.Name, fill = TRUE, plot = FALSE)
leaflet(data = mapCountries) %>%
addTiles() %>%
addPolygons(fill = topo.colors(10, alpha =  NULL), stroke = FALSE)
View(gdp_world)
View(gdp_world)
### Clean the data
gdp_world <-as.data.frame(gdp_raw$Country.Name) %>%
cbind(., gdp_raw$X2017) %>%
colnames(gdp_world) <- c(country, pcap)
### Clean the data
gdp_world <-as.data.frame(gdp_raw$Country.Name) %>%
cbind(., gdp_raw$X2017) %>%
colnames(gdp_world) <- c("country", "pcap")
colnames(gdp_world) <- c("country", "pcap")
gdp_world[!(gdp_world$country == "World")]
gdp_world <- subset(gdp_world, country != "world")
gdp_world <- subset(gdp_world, country == "world")
### Clean the data
gdp_world <-as.data.frame(gdp_raw$Country.Name) %>%
cbind(., gdp_raw$X2017)
colnames(gdp_world) <- c("country", "pcap")
gdp_world <- subset(gdp_world, country != "World")
mapCountries <- map(database = "world", regions = gdp_world$Country.Name, fill = TRUE, plot = FALSE)
leaflet(data = mapCountries) %>%
addTiles() %>%
addPolygons(fill = topo.colors(10, alpha =  NULL), stroke = FALSE)
leaflet(data = mapCountries) %>%
addTiles() %>%
addPolygons()
max(gdp_world$pcap)
summary(gdp_world)
##Adding the bins
bins <- c(0, 1000, 3000, 6000, 10000, 15000, 21000, Inf)
pal <- colorBin("YlorRd", domain = gdp_world$pcap, bins = bins)
pal <- colorBin("YlOrRd", domain = gdp_world$pcap, bins = bins)
## Drawing the map
mapCountries <- map(database = "world", regions = gdp_world$Country.Name, fill = TRUE, plot = FALSE)
leaflet(data = mapCountries) %>%
addTiles() %>%
addPolygons(
fillColor = ~pal(density),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7)
leaflet(data = mapCountries) %>%
addTiles() %>%
addPolygons(
fillColor = ~pal(pcap),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7)
leaflet(data = mapCountries) %>%
addTiles() %>%
addPolygons(
fillColor = ~pal(density),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7)
gdp_world <- subset(gdp_world, pcap != NA)
### Clean the data
gdp_world <-as.data.frame(gdp_raw$Country.Name) %>%
cbind(., gdp_raw$X2017)
colnames(gdp_world) <- c("country", "pcap")
gdp_world <- subset(gdp_world, country != "World")
gdp_world <- gdp_world[!is.na(gdp_world)]
### Clean the data
gdp_world <-as.data.frame(gdp_raw$Country.Name) %>%
cbind(., gdp_raw$X2017)
colnames(gdp_world) <- c("country", "pcap")
gdp_world <- subset(gdp_world, country != "World")
gdp_world <- as.data.frame(gdp_world[!is.na(gdp_world)])
View(gdp_world)
gdp_world[complete.cases(gdp_world), ]
### Clean the data
gdp_world <-as.data.frame(gdp_raw$Country.Name) %>%
cbind(., gdp_raw$X2017)
colnames(gdp_world) <- c("country", "pcap")
gdp_world <- subset(gdp_world, country != "World")
gdp_world<- gdp_world[complete.cases(gdp_world), ]
##Adding the bins
bins <- c(0, 1000, 3000, 6000, 10000, 15000, 21000, Inf)
pal <- colorBin("YlOrRd", domain = gdp_world$pcap, bins = bins)
## Drawing the map
mapCountries <- map(database = "world", regions = gdp_world$Country.Name, fill = TRUE, plot = FALSE)
leaflet(data = mapCountries) %>%
addTiles() %>%
addPolygons(
fillColor = ~pal(density),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7)
leaflet(data = mapCountries) %>%
addTiles() %>%
addPolygons(
fillColor = ~pal(pcap),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7)
View(gdp_world)
class(gdp_world$pcap)
m <- leaflet(data = mapCountries) %>%
addTiles()%>%
addPolygons(
fillColor = ~pal(domain),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7)
m <- leaflet(data = mapCountries) %>%
addTiles()%>%
addPolygons(
fillColor = ~pal(),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7)
m <- leaflet(data = mapCountries) %>%
addTiles()%>%
addPolygons(
fillColor = ~pal(gdp_world$pcap),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7)
m
m <- leaflet(data = mapCountries) %>%
addTiles()%>%
addPolygons(
fillColor = ~pal(gdp_world$pcap),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = -.7
bringToFront = TRUE))
m <- leaflet(data = mapCountries) %>%
addTiles()%>%
addPolygons(
fillColor = ~pal(gdp_world$pcap),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE))
m
## Some HTML to show the labels
labels <- sprintf(
"<strong>%s</strong><br/>%g people / mi<sup>2</sup>",
gdp_world$country, gdp_world$pcap
) %>% lapply(htmltools::HTML)
m <- leaflet(data = mapCountries) %>%
addTiles()%>%
addPolygons(
fillColor = ~pal(gdp_world$pcap),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))
m
## Some HTML to show the labels
labels <- sprintf(
"$<strong>%s</strong><br/>%g",
gdp_world$country, gdp_world$pcap
) %>% lapply(htmltools::HTML)
m <- leaflet(data = mapCountries) %>%
addTiles()%>%
addPolygons(
fillColor = ~pal(gdp_world$pcap),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))
m
## Some HTML to show the labels
labels <- sprintf(
"<strong>%s</strong><br/>%$g",
gdp_world$country, gdp_world$pcap
) %>% lapply(htmltools::HTML)
## Drawing the map
mapCountries <- map(database = "world", regions = gdp_world$Country.Name, fill = TRUE, plot = FALSE)
m <- leaflet(data = mapCountries) %>%
addTiles()%>%
addPolygons(
fillColor = ~pal(gdp_world$pcap),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))
m
## Some HTML to show the labels
labels <- sprintf(
"<strong>%s</strong><br/>%g",
gdp_world$country, gdp_world$pcap
) %>% lapply(htmltools::HTML)
## Drawing the map
mapCountries <- map(database = "world", regions = gdp_world$Country.Name, fill = TRUE, plot = FALSE)
m <- leaflet(data = mapCountries) %>%
addTiles()%>%
addPolygons(
fillColor = ~pal(gdp_world$pcap),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))
m
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend(pal = pal, values = ~density, opacity = 0.7, title = NULL,
position = "bottomright"
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend(pal = pal, values = ~density, opacity = 0.7, title = NULL,
position = "bottomright")
m <- leaflet(data = mapCountries) %>%
addTiles()%>%
addPolygons(
fillColor = ~pal(pcap),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend(pal = pal, values = ~pcap, opacity = 0.7, title = NULL,
position = "bottomright")
m <- leaflet(data = mapCountries) %>%
addTiles()%>%
addPolygons(
fillColor = ~pal(gdp_world$pcap),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend(pal = pal, values = ~pcap, opacity = 0.7, title = NULL,
position = "bottomright")
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend(pal = pal, values = ~gdp_world$pcap, opacity = 0.7, title = NULL,
position = "bottomright")
m <- leaflet(data = mapCountries) %>%
addTiles()%>%
addPolygons(
fillColor = ~pal(gdp_world$pcap),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))%>%
addLegend(pal = pal, values = ~gdp_world$pcap, opacity = 0.7, title = NULL,
position = "bottomright")
## Drawing the map
mapCountries <- map(database = "world", regions = gdp_world$Country.Name, fill = TRUE, plot = FALSE)
m <- leaflet(data = mapCountries) %>%
addTiles()
m
leaflet() %>%
addTiles()
leaflet() %>%
addTiles() %>%
addPolygons(data = mapCountries)
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))%>%
addLegend(pal = pal, values = ~gdp_world$pcap, opacity = 0.7, title = NULL,
position = "bottomright")
leaflet(data = mapCountries) %>%
addTiles() %>%
addPolygons(
fillColor = ~pal(gdp_world$pcap),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))%>%
addLegend(pal = pal, values = ~gdp_world$pcap, opacity = 0.7, title = NULL,
position = "bottomright")
View(gdp_world)
