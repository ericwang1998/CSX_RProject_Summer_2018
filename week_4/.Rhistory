#Doing Preliminary EDA to take a look at the data
zomato <- read.csv("~/Github/CSX_RProject_Summer_2018/week_4/zomato-restaurants-data/zomato.csv") %>%
summary(.)
#Doing Preliminary EDA to take a look at the data
zomato <- read.csv("~/Github/CSX_RProject_Summer_2018/week_4/zomato-restaurants-data/zomato.csv")
#ggmap to look at the distribution of the data within the city
library(ggmap)
CountriesMap <- qmap("New Delhi", color = "bw", legend = "toplefit")
CountriesMap <- qmap("New Delhi", color = "bw", legend = "topleft")
CountriesMap +
geom_point(aes(x = Longitude, y = Latitude, colour = offense, size = offense),
data = zomato)
CountriesMap +
geom_point(aes(x = Longitude, y = Latitude),
data = zomato)
CountriesMap +
geom_point(aes(x = Longitude, y = Latitude, colour = Cuisine),
data = zomato)
CountriesMap +
geom_point(aes(x = Longitude, y = Latitude, colour = Cuisines),
data = zomato)
CountriesMap +
geom_point(aes(x = Longitude, y = Latitude, color = Cuisines),
data = zomato)
CountriesMap +
geom_point(aes(x = Longitude, y = Latitude, color = Rating.color),
data = zomato)
CountriesMap +
geom_point(aes(x = Longitude, y = Latitude, colour = Rating.color),
data = zomato)
CountriesMap +
geom_point(aes(x = Longitude, y = Latitude, colour = Rating.color),
data = Delhi_food)
CountriesMap <- qmap("New Delhi", color = "bw", legend = "topleft")
CountriesMap +
geom_point(aes(x = Longitude, y = Latitude, colour = Rating.color),
data = Delhi_food)
CountriesMap +
geom_point(aes(x = Longitude, y = Latitude),
data = Delhi_food)
CountriesMap +
geom_point(aes(x = Longitude, y = Latitude, color = Has.Table.booking),
data = Delhi_food)
CountriesMap +
geom_point(aes(x = Longitude, y = Latitude),
data = Delhi_food)
zomato$Has.Table.booking <- as.character(zomato$Has.Table.booking)
Delhi_food <- zomato %>%
ungroup()
CountriesMap +
geom_point(aes(x = Longitude, y = Latitude, color = Has.Table.booking),
data = Delhi_food)
Delhi_food <- zomato %>%
ungroup()
Delhi_food <- zomato %>%
ungroup() %>%
filter(., City == "New Delhi")
CountriesMap +
geom_point(aes(x = Longitude, y = Latitude, color = Has.Online.booking),
data = Delhi_food)
CountriesMap +
geom_point(aes(x = Longitude, y = Latitude, color = Has.Online.delivery),
data = Delhi_food)
# First: To see if the availability of online booking affects the ratings? (T-test)
## H0: Whether online booking or not, the rating is unaffected/customers are not bothered by it
## As the independent variable online booking yes no, is a bivariate variable, a scatterplot is not suitable. We will simply explore with histograms
ggplot(Delhi_food, aes(x = Aggregate.rating)) +
geom_histogram() +
facet_wrap(Has.Online.Delivery)
# First: To see if the availability of online booking affects the ratings? (T-test)
## H0: Whether online booking or not, the rating is unaffected/customers are not bothered by it
## As the independent variable online booking yes no, is a bivariate variable, a scatterplot is not suitable. We will simply explore with histograms
ggplot(Delhi_food, aes(x = Aggregate.rating)) +
geom_histogram() +
facet_wrap(Has.Online.delivery)
zomato$Has.Online.delivery <- as.character(zomato$Has.Online.delivery)
Delhi_food <- zomato %>%
ungroup() %>%
filter(., City == "New Delhi")
# First: To see if the availability of online booking affects the ratings? (T-test)
## H0: Whether online booking or not, the rating is unaffected/customers are not bothered by it
## As the independent variable online booking yes no, is a bivariate variable, a scatterplot is not suitable. We will simply explore with histograms
ggplot(Delhi_food, aes(x = Aggregate.rating)) +
geom_histogram() +
facet_wrap(Has.Online.delivery)
# First: To see if the availability of online booking affects the ratings? (T-test)
## H0: Whether online booking or not, the rating is unaffected/customers are not bothered by it
## As the independent variable online booking yes no, is a bivariate variable, a scatterplot is not suitable. We will simply explore with histograms
ggplot(Delhi_food, aes(x = Aggregate.rating)) +
geom_histogram() +
facet_wrap(Delhi_food$Has.Online.delivery)
View(Delhi_food)
CountriesMap +
geom_point(aes(x = Longitude, y = Latitude, color = Has.Online.delivery),
data = Delhi_food)
CountriesMap +
geom_point(aes(x = Longitude, y = Latitude),
data = Delhi_food)
# First: To see if the availability of online booking affects the ratings? (T-test)
## H0: Whether online booking or not, the rating is unaffected/customers are not bothered by it
## As the independent variable online booking yes no, is a bivariate variable, a scatterplot is not suitable. We will simply explore with histograms
ggplot(Delhi_food, aes(x = Aggregate.rating)) +
geom_histogram() +
facet_wrap(Has.Online.delivery)
ggplot(Delhi_food, aes(x = Aggregate.rating)) +
geom_histogram() +
facet_wrap(~Has.Online.delivery)
# First: To see if the availability of online booking affects the ratings? (T-test)
## H0: Whether online booking or not, the rating is unaffected/customers are not bothered by it
## As the independent variable online booking yes no, is a bivariate variable, a scatterplot is not suitable. We will simply explore with histograms
summarise(mean = mean(Delhi_food$Aggregate.rating), n = n())
ggplot(Delhi_food, aes(x = Aggregate.rating)) +
geom_histogram() +
facet_wrap(~Has.Online.delivery) +
geom_vline(aes(xintercept = mean(Delhi_food$Aggregate.rating)))
ggplot(Delhi_food, aes(x = Aggregate.rating)) +
geom_histogram() +
facet_wrap(~Has.Online.delivery) +
geom_vline(aes(xintercept = mean(Delhi_food$Aggregate.rating))) +
geom_vline(aes(xintercept = median(Delhi_food$Aggregate.rating)))
ggplot(Delhi_food, aes(x = Aggregate.rating)) +
geom_histogram() +
facet_wrap(~Has.Online.delivery) +
geom_vline(aes(xintercept = mean(Delhi_food$Aggregate.rating, colour = "#bcbcbc"), linetype = "dashed")) +
geom_vline(aes(xintercept = median(Delhi_food$Aggregate.rating, colour = "#bbbbbb"), linetype = "dashed"))
ggplot(Delhi_food, aes(x = Aggregate.rating)) +
geom_histogram() +
facet_wrap(~Has.Online.delivery) +
geom_vline(aes(xintercept = mean(Delhi_food$Aggregate.rating, colour = "#bcbcbc"), linetype = "Mean")) +
geom_vline(aes(xintercept = median(Delhi_food$Aggregate.rating, colour = "#bbbbbb"), linetype = "Median"))
colours()
ggplot(Delhi_food, aes(x = Aggregate.rating, colour = "turquoise")) +
geom_histogram() +
facet_wrap(~Has.Online.delivery) +
geom_vline(aes(xintercept = mean(Delhi_food$Aggregate.rating), linetype = "Mean")) +
geom_vline(aes(xintercept = median(Delhi_food$Aggregate.rating), linetype = "Median"))
ggplot(Delhi_food, aes(x = Aggregate.rating)) +
geom_histogram(colour = "turquoise") +
facet_wrap(~Has.Online.delivery) +
geom_vline(aes(xintercept = mean(Delhi_food$Aggregate.rating), linetype = "Mean")) +
geom_vline(aes(xintercept = median(Delhi_food$Aggregate.rating), linetype = "Median"))
ggplot(Delhi_food, aes(x = Aggregate.rating)) +
geom_histogram(fill = "turquoise") +
facet_wrap(~Has.Online.delivery) +
geom_vline(aes(xintercept = mean(Delhi_food$Aggregate.rating), linetype = "Mean")) +
geom_vline(aes(xintercept = median(Delhi_food$Aggregate.rating), linetype = "Median"))
ggplot(Delhi_food, aes(x = Aggregate.rating)) +
geom_histogram(fill = "turquoise3") +
facet_wrap(~Has.Online.delivery) +
geom_vline(aes(xintercept = mean(Delhi_food$Aggregate.rating), linetype = "Mean")) +
geom_vline(aes(xintercept = median(Delhi_food$Aggregate.rating), linetype = "Median"))
# I believe that correlation analysis will not be helpful in this case. Due to the bivariate variable again.
# Time for t test.
Delhi_food %>%
t.test(Aggregate.rating~Has.Online.delivery)
t.test(Aggregate.rating ~ Has.Online.delivery, data = Delhi_food)
unique(Delhi_food$Price.range)
unique(Delhi_food$Average.Cost.for.two)
# Second: H0: To see if the
## H0: The ratings are not different amongst the price range. More expensive meals != better experience
ggplot(Delhi_food, aes(x = Average.Cost.for.two, y = Aggregate.rating)) +
geom_point(fill = "red")
# Second: H0: To see if the
## H0: The ratings are not different amongst the price range. More expensive meals != better experience
ggplot(Delhi_food, aes(x = Average.Cost.for.two, y = Aggregate.rating)) +
geom_point(colour = "red")
##As the distribution is not normal for both variable, we will use spearman correlation instead.
Delhi_food %>%
cor(Aggregate.rating, Average.Cost.for.two, use = "complete.obs", method = "spearman")
##As the distribution is not normal for both variable, we will use spearman correlation instead.
Delhi_food %>%
cor(x = Aggregate.rating, y = Average.Cost.for.two, use = "complete.obs", method = "spearman")
##As the distribution is not normal for both variable, we will use spearman correlation instead.
rcor(Delhi_food$Aggregate.rating, Delhi_food$Average.Cost.for.two, method = "spearman")
##As the distribution is not normal for both variable, we will use spearman correlation instead.
corr(Delhi_food$Aggregate.rating, Delhi_food$Average.Cost.for.two, method = "spearman")
##As the distribution is not normal for both variable, we will use spearman correlation instead.
Delhi_food %>%
summarise(N = n(), r = cor(Aggregate.rating, Average.Cost.for.two, use = "pairwise.complete.obs", method = "spearman"))
ggplot(Delhi_food, aes(x = Votes, y = Aggregate.rating)) +
geom_point(colour = "red")
Delhi_food %>%
summarise(N = n(), r = cor(Aggregate.rating, Votes, use = "pairwise.complete.obs", method = "spearman"))
class(Delhi_food$Price.range)
unique(Delhi_food$Price.range)
## NOw we will look at Price range since it is a categorical, ordinal factor
Delhi_food$Price.range <- factor(Delhi_food$Price.range,
levels = c(1, 2, 3, 4))
#Looking at the average ratings for each price range
tapply(Delhi_food$Aggregate.rating, Delhi_food$Price.range, mean)
ggplot(data = Delhi_food,
aes(x = Price.range, y = Aggregate.rating)) +
stat_summary(fun.data = 'mean_cl_boot', size = 1) +
scale_y_continuous(breaks = seq(500, 660, by = 20)) +
geom_hline(yintercept = mean(Delhi_food$Aggregate.rating) ,
linetype = 'dotted') +
labs(x = 'Price Range', y = 'Aggregate Rating') +
coord_flip()
require(Hmisc)
ggplot(data = Delhi_food,
aes(x = Price.range, y = Aggregate.rating)) +
scale_y_continuous(breaks = seq(500, 660, by = 20)) +
geom_hline(yintercept = mean(Delhi_food$Aggregate.rating) ,
linetype = 'dotted') +
labs(x = 'Price Range', y = 'Aggregate Rating') +
coord_flip()
ggplot(data = Delhi_food,
aes(x = Price.range, y = Aggregate.rating)) +
geom_jitter(fill = "orange") +
scale_y_continuous(breaks = seq(500, 660, by = 20)) +
geom_hline(yintercept = mean(Delhi_food$Aggregate.rating) ,
linetype = 'dotted') +
labs(x = 'Price Range', y = 'Aggregate Rating') +
coord_flip()
ggplot(data = Delhi_food,
aes(x = Price.range, y = Aggregate.rating)) +
geom_jitter(fill = "orange") +
scale_y_continuous(breaks = seq(500, 660, by = 20)) +
geom_hline(yintercept = mean(Delhi_food$Aggregate.rating) ,
linetype = 'dotted') +
labs(x = 'Price Range', y = 'Aggregate Rating')
ggplot(data = Delhi_food,
aes(x = Price.range, y = Aggregate.rating)) +
geom_count(fill = "orange") +
scale_y_continuous(breaks = seq(500, 660, by = 20)) +
geom_hline(yintercept = mean(Delhi_food$Aggregate.rating) ,
linetype = 'dotted') +
labs(x = 'Price Range', y = 'Aggregate Rating')
jitter
ggplot(data = Delhi_food,
aes(x = Price.range, y = Aggregate.rating)) +
geom_jitter(fill = "orange") +
scale_y_continuous(breaks = seq(500, 660, by = 20)) +
geom_hline(yintercept = mean(Delhi_food$Aggregate.rating) ,
linetype = 'dotted') +
labs(x = 'Price Range', y = 'Aggregate Rating')
ggplot(data = Delhi_food,
aes(x = Price.range, y = Aggregate.rating)) +
geom_jitter() +
geom_density2d()
ggplot(data = Delhi_food,
aes(x = Price.range, y = Aggregate.rating)) +
geom_density2d()
ggplot(data = Delhi_food,
aes(x = Price.range, y = Aggregate.rating)) +
geom_jitter() +
geom_density_2d() +
geom_hline(yintercept = mean(Delhi_food$Aggregate.rating) ,
linetype = 'dotted') +
labs(x = 'Price Range', y = 'Aggregate Rating')
ggplot(data = Delhi_food,
aes(x = Price.range, y = Aggregate.rating)) +
geom_jitter() +
stat_density_2d(aes(fill = "red")) +
geom_hline(yintercept = mean(Delhi_food$Aggregate.rating) ,
linetype = 'dotted') +
labs(x = 'Price Range', y = 'Aggregate Rating')
ggplot(data = Delhi_food,
aes(x = Price.range, y = Aggregate.rating)) +
geom_jitter(fill = "red") +
geom_hline(yintercept = mean(Delhi_food$Aggregate.rating) ,
linetype = 'Mean Rating') +
labs(x = 'Price Range', y = 'Aggregate Rating')
ggplot(data = Delhi_food,
aes(x = Price.range, y = Aggregate.rating)) +
geom_jitter(fill = "red") +
geom_hline(yintercept = mean(Delhi_food$Aggregate.rating) ,
linetype = 'dotted', show.legend = "Mean Rating") +
labs(x = 'Price Range', y = 'Aggregate Rating')
ggplot(data = Delhi_food,
aes(x = Price.range, y = Aggregate.rating)) +
geom_jitter(fill = "red") +
geom_hline(yintercept = mean(Delhi_food$Aggregate.rating) ,
linetype = 'dotted', show.legend = TRUE) +
labs(x = 'Price Range', y = 'Aggregate Rating')
ggplot(data = Delhi_food,
aes(x = Price.range, y = Aggregate.rating)) +
geom_jitter(fill = "red") +
geom_hline(yintercept = mean(Delhi_food$Aggregate.rating) ,
linetype = 'dotted', colour = "red") +
labs(x = 'Price Range', y = 'Aggregate Rating')
ggplot(data = Delhi_food,
aes(x = Price.range, y = Aggregate.rating)) +
geom_jitter(fill = "red") +
geom_hline(yintercept = mean(Delhi_food$Aggregate.rating) ,
linetype = 1, colour = "red") +
labs(x = 'Price Range', y = 'Aggregate Rating')
ggplot(data = Delhi_food,
aes(x = Price.range, y = Aggregate.rating)) +
geom_jitter(fill = "red") +
geom_hline(yintercept = mean(Delhi_food$Aggregate.rating) ,
linetype = 1, colour = "red") +
labs(x = 'Price Range', y = 'Aggregate Rating') +
geom_text(data=Delhi_food(x=0,y=mean(Delhi_food$Aggregate.rating)), aes(x, y), label= "Mean Rating", vjust=-1)
ggplot(data = Delhi_food,
aes(x = Price.range, y = Aggregate.rating)) +
geom_jitter(fill = "red") +
geom_hline(yintercept = mean(Delhi_food$Aggregate.rating) ,
linetype = 1, colour = "red") +
labs(x = 'Price Range', y = 'Aggregate Rating') +
geom_text(data=data.frame(x=0,y=mean(Delhi_food$Aggregate.rating)), aes(x, y), label= "Mean Rating", vjust=-1)
ggplot(data = Delhi_food,
aes(x = Price.range, y = Aggregate.rating)) +
geom_jitter(fill = "red") +
geom_hline(yintercept = mean(Delhi_food$Aggregate.rating) ,
linetype = 1, colour = "red") +
labs(x = 'Price Range', y = 'Aggregate Rating') +
geom_text(data=data.frame(x=0,y=mean(Delhi_food$Aggregate.rating)), aes(x, y), label= "Mean", vjust=-1)
ggplot(Delhi_food, aes(x = Aggregate.rating)) +
geom_histogram(fill = "turquoise3") +
facet_wrap(~Has.Online.delivery) +
geom_vline(aes(xintercept = mean(Delhi_food$Aggregate.rating), linetype = "Mean")) +
geom_vline(aes(xintercept = median(Delhi_food$Aggregate.rating), linetype = "Median"))
ggplot(data = Delhi_food,
aes(x = Price.range, y = Aggregate.rating)) +
geom_jitter(fill = "red") +
geom_hline(yintercept = mean(Delhi_food$Aggregate.rating) ,
linetype = "Mean", colour = "red",) +
labs(x = 'Price Range', y = 'Aggregate Rating') +
ggplot(data = Delhi_food,
aes(x = Price.range, y = Aggregate.rating)) +
geom_jitter(fill = "red") +
geom_hline(yintercept = mean(Delhi_food$Aggregate.rating) ,
linetype = "Mean", colour = "red",) +
labs(x = 'Price Range', y = 'Aggregate Rating')
ggplot(data = Delhi_food,
aes(x = Price.range, y = Aggregate.rating)) +
geom_jitter(fill = "red") +
geom_hline(yintercept = mean(Delhi_food$Aggregate.rating) ,
linetype = 1, colour = "red",) +
labs(x = 'Price Range', y = 'Aggregate Rating')
ggplot(data = Delhi_food,
aes(x = Price.range, y = Aggregate.rating)) +
geom_jitter(fill = "red") +
geom_hline(yintercept = mean(Delhi_food$Aggregate.rating) ,
linetype = 1, colour = "red",) +
labs(x = 'Price Range', y = 'Aggregate Rating') +
annotate(geom="text", label=h, x=1, y=h, vjust=-1)
ggplot(data = Delhi_food,
aes(x = Price.range, y = Aggregate.rating)) +
geom_jitter(fill = "red") +
geom_hline(yintercept = mean(Delhi_food$Aggregate.rating) ,
linetype = 1, colour = "red",) +
labs(x = 'Price Range', y = 'Aggregate Rating') +
annotate(geom="text", label=h, x=1, y=mean(Delhi_food$Aggregate.rating), vjust=-1)
ggplot(data = Delhi_food,
aes(x = Price.range, y = Aggregate.rating)) +
geom_jitter(fill = "red") +
geom_hline(yintercept = mean(Delhi_food$Aggregate.rating) ,
linetype = 1, colour = "red",) +
labs(x = 'Price Range', y = 'Aggregate Rating') +
annotate(geom="text", label="mean", x=1, y=mean(Delhi_food$Aggregate.rating), vjust=-1)
ggplot(data = Delhi_food,
aes(x = Price.range, y = Aggregate.rating)) +
geom_jitter(fill = "red") +
geom_hline(yintercept = mean(Delhi_food$Aggregate.rating) ,
linetype = 1, colour = "red",) +
labs(x = 'Price Range', y = 'Aggregate Rating') +
annotate(geom="text", label="mean", x=0.2, y=mean(Delhi_food$Aggregate.rating), vjust=-1)
ggplot(data = Delhi_food,
aes(x = Price.range, y = Aggregate.rating)) +
geom_jitter(fill = "red") +
geom_hline(yintercept = mean(Delhi_food$Aggregate.rating) ,
linetype = 1, colour = "red",) +
labs(x = 'Price Range', y = 'Aggregate Rating') +
annotate(geom="text", label="mean", x=0.5, y=mean(Delhi_food$Aggregate.rating), vjust=-1)
ggplot(data = Delhi_food,
aes(x = Price.range, y = Aggregate.rating)) +
geom_jitter(fill = "red") +
geom_hline(yintercept = mean(Delhi_food$Aggregate.rating) ,
linetype = 1, colour = "red",) +
labs(x = 'Price Range', y = 'Aggregate Rating') +
annotate(geom="text", label="mean", x=0.5, y=mean(Delhi_food$Aggregate.rating), vjust=-1, colour = "red")
require(ggpubr)
ggline(Delhi_food, x = "Price.range", y = "Aggregate.rating",
add = c("mean_se", "jitter"),
order = c(1, 2, 3, 4),
ylab = "Aggregate Ratings", xlab = "Price Range")
ggline(Delhi_food, x = "Price.range", y = "Aggregate.rating",
add = c("mean_se"),
order = c(1, 2, 3, 4),
ylab = "Aggregate Ratings", xlab = "Price Range")
## Seems like there are some minor differences.
price_anova <- aov(Aggregate.rating ~ Price.range, data = Delhi_food)
summary(price_anova)
## So we can reject null hypothesis that aggregate ratings are same amongst the different price ranges.
TukeyHSD(price_anova)
# Drawing ANOVA?
price_mod1 <- lm(Aggregate.rating ~ Price.range, data = Delhi_food)
summary(price_mod1)
anova(price_mod1)
cofint(price_mod1)
confint(price_mod1)
price_mod = data.frame(Fitted = fitted(price_mod1),
Residuals = resid(price_mod1),
Treatment = Delhi_food$Price.range)
ggplot(price_mod, aes(Fitted, Residuals, colour = Treatment)) +
geom_point()
library(magrittr)
library(dplyr)
require(ggpubr)
library(ggmap)
CountriesMap <- qmap("New Delhi", color = "bw", legend = "topleft")
CountriesMap +
geom_point(aes(x = Longitude, y = Latitude, color = Aggregate.rating),
data = Delhi_food)
CountriesMap +
geom_point(aes(x = Longitude, y = Latitude, color),
data = Delhi_food)
CountriesMap <- qmap("New Delhi", color = "bw", legend = "topleft")
CountriesMap +
geom_point(aes(x = Longitude, y = Latitude, color = Aggregate.Rating),
data = Delhi_food)
CountriesMap +
geom_point(aes(x = Longitude, y = Latitude, color = Aggregate.rating),
data = Delhi_food)
CountriesMap <- qmap("New Delhi", color = "bw", legend = "topleft")
CountriesMap +
geom_point(aes(x = Longitude, y = Latitude, color = Aggregate.rating),
data = Delhi_food)
rm(list = ls())
library(magrittr)
library(dplyr)
require(ggpubr)
library(ggmap)
zomato <- read.csv("~/Github/CSX_RProject_Summer_2018/week_4/zomato-restaurants-data/zomato.csv")
summaty(zomato)
zomato <- read.csv("~/Github/CSX_RProject_Summer_2018/week_4/zomato-restaurants-data/zomato.csv")
summary(zomato)
zomato$City <- as.character(zomato$City)
Delhi_food <- zomato %>%
ungroup() %>%
filter(., City == "New Delhi")
CountriesMap <- qmap("New Delhi", color = "bw", legend = "topleft")
CountriesMap +
geom_point(aes(x = Longitude, y = Latitude),
data = Delhi_food)
summary(Delhi_food)
ggplot(Delhi_food, aes(x = Aggregate.rating)) +
geom_histogram(fill = "turquoise3") +
facet_wrap(~Has.Online.delivery) +
geom_vline(aes(xintercept = mean(Delhi_food$Aggregate.rating), linetype = "Mean")) +
geom_vline(aes(xintercept = median(Delhi_food$Aggregate.rating), linetype = "Median")
ggplot(Delhi_food, aes(x = Aggregate.rating)) +
geom_histogram(fill = "turquoise3") +
facet_wrap(~Has.Online.delivery) +
geom_vline(aes(xintercept = mean(Delhi_food$Aggregate.rating), linetype = "Mean")) +
geom_vline(aes(xintercept = median(Delhi_food$Aggregate.rating), linetype = "Median"))
print(mean(Delhi_food$Aggregate.rating))
print(median(Delhi_food$Aggregate.rating))
t.test(Aggregate.rating ~ Has.Online.delivery, data = Delhi_food)
ggplot(Delhi_food, aes(x = Average.Cost.for.two, y = Aggregate.rating)) +
geom_point(colour = "red")
Delhi_food %>%
summarise(N = n(), r = cor(Aggregate.rating, Average.Cost.for.two, use = "pairwise.complete.obs", method = "spearman"))
ggplot(Delhi_food, aes(x = Votes, y = Aggregate.rating)) +
geom_point(colour = "blue")
Delhi_food %>%
summarise(N = n(), r = cor(Aggregate.rating, Votes, use = "pairwise.complete.obs", method = "spearman"))
Delhi_food$Price.range <- factor(Delhi_food$Price.range, levels = c(1, 2, 3, 4))
ggplot(data = Delhi_food,
aes(x = Price.range, y = Aggregate.rating)) +
geom_jitter(fill = "red") +
geom_hline(yintercept = mean(Delhi_food$Aggregate.rating) ,
linetype = 1, colour = "red") +
labs(x = 'Price Range', y = 'Aggregate Rating') +
annotate(geom="text", label="mean", x=0.5, y=mean(Delhi_food$Aggregate.rating), vjust=-1, colour = "red")
tapply(Delhi_food$Aggregate.rating, Delhi_food$Price.range, mean)
ggline(Delhi_food, x = "Price.range", y = "Aggregate.rating",
add = c("mean_se"),
order = c(1, 2, 3, 4),
ylab = "Aggregate Ratings", xlab = "Price Range")
Delhi_food$Price.range <- factor(Delhi_food$Price.range, levels = c(1, 2, 3, 4))
ggplot(data = Delhi_food,
aes(x = Price.range, y = Aggregate.rating)) +
geom_jitter(fill = "red") +
geom_hline(yintercept = mean(Delhi_food$Aggregate.rating) ,
linetype = 1, colour = "red") +
labs(x = 'Price Range', y = 'Aggregate Rating') +
annotate(geom="text", label="mean", x=0.5, y=mean(Delhi_food$Aggregate.rating), vjust=-1, colour = "red")
tapply(Delhi_food$Aggregate.rating, Delhi_food$Price.range, mean)
ggline(Delhi_food, x = "Price.range", y = "Aggregate.rating",
add = c("mean_se"),
order = c(1, 2, 3, 4),
ylab = "Aggregate Ratings", xlab = "Price Range")
tapply(Delhi_food$Aggregate.rating, Delhi_food$Price.range, mean)
ggline(Delhi_food, x = "Price.range", y = "Aggregate.rating",
add = c("mean_se"),
order = c(1, 2, 3, 4),
ylab = "Aggregate Ratings", xlab = "Price Range") +
ggtitle("Mean ratings for the different price range restaurants")
price_anova <- aov(Aggregate.rating ~ Price.range, data = Delhi_food)
summary(price_anova)
TukeyHSD(price_anova)
price_mod1 <- lm(Aggregate.rating ~ Price.range, data = Delhi_food)
summary(price_mod1)
anova(price_mod1)
confint(price_mod1)
price_mod = data.frame(Fitted = fitted(price_mod1),
Residuals = resid(price_mod1),
Treatment = Delhi_food$Price.range)
ggplot(price_mod, aes(Fitted, Residuals, colour = Treatment)) +
geom_point()
CountriesMap <- qmap("New Delhi", color = "bw", legend = "topleft")
CountriesMap +
geom_point(aes(x = Longitude, y = Latitude),
data = Delhi_food)
CountriesMap <- qmap("New Delhi", color = "bw", legend = "topleft")
CountriesMap +
geom_point(aes(x = Longitude, y = Latitude),
data = Delhi_food)
View(zomato)
